/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Features
// - Modifiers are universal and none of the other keys pass through.
// - One handed access to most common keys.
// - Numbers and function keys have the same numbers.
// - Arrow keys mapped similarly to HHKB with pinky on Fn (LWR).

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
//        --------------------------------------------------------------------------
//        | TAB |  Q  |  W  |  E  |  R  |  T  ||  Y  |  U  |  I  |  O  |  P  | BSP |
//        | CRL |  A  |  S  |  D  |  F  |  G  ||  H  |  J  |  K  |  L  |  ;  |  '  |
//        | SHT |  Z  |  X  |  C  |  V  |  B  ||  N  |  M  |  ,  |  .  |  /  | LWR |
//                          | ALT | LWR | SPC || ENT | RSE | GUI |

                        bindings = <
&kp TAB   &kp Q &kp W &kp E    &kp R &kp T      &kp Y   &kp U &kp I     &kp O   &kp P    &kp BSPC
&kp LCTRL &kp A &kp S &kp D    &kp F &kp G      &kp H   &kp J &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT &kp Z &kp X &kp C    &kp V &kp B      &kp N   &kp M &kp COMMA &kp DOT &kp FSLH &mo 1
                      &kp LALT &mo 1 &kp SPACE  &kp RET &mo 2 &kp RGUI
                        >;
                };

                lower_layer {
//    --------------------------------------------------------------------------
//    | ESC |  1  |  2  |  3  |  4  |  5  ||  6  |  7  |  8  |  9  |  0  | DEL |
//    |  v  |     |     |     |     |     ||     |     | HME | UP  | END |     |
//    |  v  |     |     |     |     |     ||     |     | LFT | DWN | RGT |  v  |
//                      |  v  |  v  |  v  ||  v  |  v  |  v  |

                        bindings = <
&kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5  &kp N6 &kp N7 &kp N8   &kp N9   &kp N0    &kp DEL
&trans  &none  &none  &none  &none  &none   &none  &none  &kp END  &kp UP   &kp HOME  &none
&trans  &none  &none  &none  &none  &none   &none  &none  &kp LEFT &kp DOWN &kp RIGHT &trans
                      &trans &trans &trans  &trans &trans &trans
                        >;
                };

                raise_layer {
//                                  --------------------------------------------------------------------------
//                                  | F12 | F1  | F2  | F3  | F4  | F5  || F6  | F7  | F8  | F9  | F10 | F11 |
//                                  |  v  |     |     |     | BLE | USB ||     |  -  |  =  |  \  |  `  |     |
//                                  |  v  | BT0 | BT1 | BT3 | BT4 | BTC ||     |  [  |  ]  |     |     |  v  |
//                                                    |  v  |  v  |  v  ||  v  |  v  |  v  |

                        bindings = <
&kp F12 &kp F1       &kp F2       &kp F3       &kp F4       &kp F5        &kp F6 &kp F7    &kp F8    &kp F9   &kp F10   &kp F11
&trans  &none        &none        &none        &out OUT_BLE &out OUT_USB  &none  &kp MINUS &kp EQUAL &kp BSLH &kp GRAVE &none
&trans  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR    &none  &kp LBKT  &kp RBKT  &none    &none     &trans
                                  &trans       &trans       &trans        &trans &trans    &trans
                        >;
                };
        };
};
